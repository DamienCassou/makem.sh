#+TITLE: makem.sh

#+PROPERTY: LOGGING nil

# Note: This readme works with the org-make-toc <https://github.com/alphapapa/org-make-toc> package, which automatically updates the table of contents.

=makem.sh= is a script to help build and test Emacs Lisp packages (not Emacs itself).  It aims to make linting and testing as simple as possible.  Source files and test files are discovered automatically from the project's Git repo.  Output is simple: by default, there is no output unless errors occur.  With increasing verbosity levels (with =-v= or =-vv= options), more detail gives positive feedback.  Output is colored by default to make reading easy.

* Screenshots

Some example output.  The first shows running the =test= rule with verbosity level 1, which shows which tests are run but omits each test's output unless it fails:

[[images/make-test-v.png]]

Increasing the verbosity shows green output for passing tests:

[[images/make-test-vv.png]]

The =lint-compile= rule treats byte-compiler warnings as errors:

[[images/make-lint-compile.png]]

The =all= rule runs all rules and treats warnings as errors:

[[images/make-all.png]]

Of course, with increased verbosity, it also shows which rules did not signal errors:

[[images/make-all-v.png]]

* Contents                                                         :noexport:
:PROPERTIES:
:TOC:      this
:END:
  -  [[#installation][Installation]]
  -  [[#usage][Usage]]
  -  [[#changelog][Changelog]]
  -  [[#credits][Credits]]
  -  [[#development][Development]]
  -  [[#license][License]]

* Installation
:PROPERTIES:
:TOC:      0
:END:

Copy =makem.sh= into your package's root directory.  Optionally, also copy =Makefile=, to make calling the script easier.

* Usage
:PROPERTIES:
:TOC:      0
:END:

The =makem.sh= script can be called directly or through a =Makefile=.

** Makefile

A default =Makefile= is provided which calls the =makem.sh= script.  Call it with the name of a rule and an optional verbosity level, like:

#+BEGIN_SRC sh
  # Run all rules.
  $ make

  # Run all lints.
  $ make lint

  # Run all tests.
  $ make test

  # Run ERT tests with verbosity level 1.
  $ make v=v test-ert

  # Run Buttercup tests with verbosity level 2.
  $ make v=vv test-buttercup
#+END_SRC

** Script

The script may be called directly to specify additional options.

#+BEGIN_EXAMPLE
makem.sh [OPTIONS] RULES...

Rules:
  all      Run all lints and tests.
  compile  Byte-compile source files.

  lint           Run all lints.
  lint-checkdoc  Run checkdoc.
  lint-compile   Byte-compile source files with warnings as errors.
  lint-package   Run package-lint.

  test, tests     Run all tests.
  test-buttercup  Run Buttercup tests.
  test-ert        Run ERT tests.

Options:
  -d, --debug    Print debug info.
  -h, --help     I need somebody!
  -v, --verbose  Increase verbosity, up to -vv.

  -f FILE, --file FILE  Check FILE in addition to discovered files.

  --no-color        Disable color output.
  -C, --no-compile  Don't compile files automatically.

Source files are automatically discovered from git, or may be
specified with options.
#+END_EXAMPLE

* Changelog
:PROPERTIES:
:TOC:      0
:END:

** 0.1-pre

Initial release.

* Credits

Inspired by Damien Cassou's excellent [[https://gitlab.petton.fr/DamienCassou/makel][makel]] project.

* Development

Bug reports, feature requests, suggestions â€” /oh my/!

* License

GPLv3

# Local Variables:
# eval: (require 'org-make-toc)
# before-save-hook: org-make-toc
# org-export-with-properties: ()
# org-export-with-title: t
# End:

